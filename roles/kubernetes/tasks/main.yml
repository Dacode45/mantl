---
- name: create kubernetes config directories
  sudo: yes
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/etc/kubernetes"
    - "/srv/kubernetes"
    - "{{ kube_manifest_dir }}"
    - "{{ kube_podmaster_dir }}"
    - "{{ kube_users_dir }}"
  tags:
    - kubernetes

- name: download kubernetes binaries
  sudo: yes
  get_url:
    url: "{{ kube_url }}/{{ item }}"
    dest: /usr/bin
    mode: 0753
  with_items:
    - kubelet
    - kubectl
  tags:
    - kubernetes

- name: generate kubelet systemd unit
  sudo: yes
  template:
    src: kubelet.service.j2
    dest: /usr/lib/systemd/system/kubelet.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart kubelet
  tags:
    - kubernetes

- name: generate kubelet kubeconfig
  sudo: yes
  template:
    src: "kubeconfig.yml.j2"
    dest: "/etc/kubernetes/kubeconfig.yml"
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart kubelet
  tags:
    - kubernetes

- name: enable and start kubelet service
  sudo: yes
  service:
    name: kubelet
    enabled: yes
    state: started
  tags:
    - kubernetes

- name: pull hyperkube docker image
  sudo: yes
  command: "docker pull gcr.io/google_containers/hyperkube:{{ kube_version }}"
  register: docker_pull_result
  changed_when: docker_pull_result.stdout.find('newer') > -1
  tags:
    - kubernetes

- include: secrets.yml
  tags:
    - secrets
    - kubernetes

- name: generate kube-proxy manifest
  sudo: yes
  template:
    src: "kube-proxy.yml"
    dest: "{{ kube_manifest_dir }}/kube-proxy.yml"
    owner: root
    group: root
    mode: 0644
  notify:
    - restart kubelet
  tags:
    - kubernetes
